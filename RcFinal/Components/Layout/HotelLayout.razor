@inherits LayoutComponentBase
@inject IJSRuntime JS

<HeadContent>
    <!-- Google Font -->
    <link href="https://fonts.googleapis.com/css?family=Lora:400,700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Cabin:400,500,600,700&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="css/font-awesome.min.css" type="text/css">
    <link rel="stylesheet" href="css/elegant-icons.css" type="text/css">
    <link rel="stylesheet" href="css/flaticon.css" type="text/css">
    <link rel="stylesheet" href="css/owl.carousel.min.css" type="text/css">
    <link rel="stylesheet" href="css/nice-select.css" type="text/css">
    <link rel="stylesheet" href="css/jquery-ui.min.css" type="text/css">
    <link rel="stylesheet" href="css/magnific-popup.css" type="text/css">
    <link rel="stylesheet" href="css/slicknav.min.css" type="text/css">
    <link rel="stylesheet" href="css/style.css" type="text/css">
    <link rel="stylesheet" href="css/bootstrap.min.css" />
</HeadContent>

<div class="page">
    <BlazoredToasts Position="ToastPosition.TopRight" Timeout="6" ShowProgressBar="true" />    
    <main>
        <div class="topbar">
            <HotelNavMenu />
        </div>
        <article class="content px-4">
            @Body
        </article>
        <div class="footer-section">
            <HotelFooter/>
        </div>
    </main>
</div>

<script>
    // define a global setup function
    window.setupOffcanvas = () => {
      // open
      document.querySelectorAll('.canvas-open').forEach(btn =>
        btn.addEventListener('click', () => {
          document.querySelector('.offcanvas-menu-wrapper')
                  .classList.add('show-offcanvas-menu-wrapper');
          document.querySelector('.offcanvas-menu-overlay')
                  .classList.add('active');
        })
      );
      // close
      document.querySelectorAll('.canvas-close, .offcanvas-menu-overlay')
              .forEach(el => el.addEventListener('click', () => {
        document.querySelector('.offcanvas-menu-wrapper')
                .classList.remove('show-offcanvas-menu-wrapper');
        document.querySelector('.offcanvas-menu-overlay')
                .classList.remove('active');
      }));
    };
</script>

@code {
    private bool _offcanvasInitialized;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!_offcanvasInitialized)
        {
            _offcanvasInitialized = true;
            await JS.InvokeVoidAsync("setupOffcanvas");
        }
    }
}